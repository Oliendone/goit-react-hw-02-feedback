{"version":3,"sources":["components/Section/Section.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/App.js","index.js"],"names":["Section","title","children","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","onLeaveFeedback","onClick","value","Notification","message","App","state","countTotalFeedback","setState","prevState","countPositiveFeedbackPercentage","console","log","Math","trunc","handleFeedback","e","feedbackButton","target","this","Component","ReactDOM","render","document","querySelector"],"mappings":"oPAGe,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,iCACE,4BAAKD,GACJC,GCJQ,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,6BACE,4BACE,4BACE,oCAAUJ,IAEZ,4BACE,uCAAaC,IAEf,4BACE,mCAASC,IAEX,4BACE,qCAAWC,IAEb,4BACE,iDAAuBC,MCvBlB,SAASC,EAAT,GAA+C,IAApBC,EAAmB,EAAnBA,gBACxC,OACE,6BACE,4BAAQC,QAASD,EAAiBE,MAAM,QAAxC,QAGA,4BAAQD,QAASD,EAAiBE,MAAM,WAAxC,WAGA,4BAAQD,QAASD,EAAiBE,MAAM,OAAxC,QCVS,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OACE,oCACE,2BAAIA,I,ICEWC,E,4MACnBC,MAAQ,CACNZ,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,mBAAoB,G,EAGtBS,mBAAqB,WACnB,EAAKC,UAAS,SAAAC,GACZ,MAAO,CACLZ,MAAOY,EAAUf,KAAOe,EAAUd,QAAUc,EAAUb,S,EAK5Dc,gCAAkC,WAChC,EAAKF,UAAS,SAAAC,GAEZ,OADAE,QAAQC,MACD,CACLd,mBAAoBe,KAAKC,MACtBL,EAAUf,KAAOe,EAAUZ,MAAS,U,EAM7CkB,eAAiB,SAAAC,GACf,IAAMC,EAAiBD,EAAEE,OAAOhB,MAEhC,EAAKM,UAAS,SAAAF,GACZ,OAAO,eACJW,EAAiBX,EAAMW,GAAkB,MAG9C,EAAKV,qBACL,EAAKG,mC,uDAIL,OACE,oCACE,kBAACpB,EAAD,CAASC,MAAM,wBACb,kBAACQ,EAAD,CAAiBC,gBAAiBmB,KAAKJ,kBAEzC,kBAACzB,EAAD,CAASC,MAAM,cACZ4B,KAAKb,MAAMT,MAAQ,EAClB,kBAACJ,EAAe0B,KAAKb,OAErB,kBAACH,EAAD,CAAcC,QAAQ,4B,GAlDDgB,a,MCDjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W","file":"static/js/main.e6e37cde.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.objectOf(PropTypes.func.isRequired),\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <div>\r\n      <ul>\r\n        <li>\r\n          <p>Good: {good}</p>\r\n        </li>\r\n        <li>\r\n          <p>Neutral: {neutral}</p>\r\n        </li>\r\n        <li>\r\n          <p>Bad: {bad}</p>\r\n        </li>\r\n        <li>\r\n          <p>Total: {total}</p>\r\n        </li>\r\n        <li>\r\n          <p>Positive feedback: {positivePercentage}</p>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function FeedbackOptions({ onLeaveFeedback }) {\r\n  return (\r\n    <div>\r\n      <button onClick={onLeaveFeedback} value=\"good\">\r\n        Good\r\n      </button>\r\n      <button onClick={onLeaveFeedback} value=\"neutral\">\r\n        Neutral\r\n      </button>\r\n      <button onClick={onLeaveFeedback} value=\"bad\">\r\n        Bad\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\n\r\nexport default function Notification({ message }) {\r\n  return (\r\n    <>\r\n      <p>{message}</p>\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\n\nimport Section from './Section/Section';\nimport Statistics from './Statistics/Statistics';\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\nimport Notification from './Notification/Notification';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n    total: 0,\n    positivePercentage: 0,\n  };\n\n  countTotalFeedback = () => {\n    this.setState(prevState => {\n      return {\n        total: prevState.good + prevState.neutral + prevState.bad,\n      };\n    });\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    this.setState(prevState => {\n      console.log();\n      return {\n        positivePercentage: Math.trunc(\n          (prevState.good / prevState.total) * 100,\n        ),\n      };\n    });\n  };\n\n  handleFeedback = e => {\n    const feedbackButton = e.target.value;\n\n    this.setState(state => {\n      return {\n        [feedbackButton]: state[feedbackButton] + 1,\n      };\n    });\n    this.countTotalFeedback();\n    this.countPositiveFeedbackPercentage();\n  };\n\n  render() {\n    return (\n      <>\n        <Section title=\"Plese leave feedback\">\n          <FeedbackOptions onLeaveFeedback={this.handleFeedback} />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.state.total > 0 ? (\n            <Statistics {...this.state} />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport './base.css';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}