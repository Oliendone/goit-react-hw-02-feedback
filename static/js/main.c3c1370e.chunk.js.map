{"version":3,"sources":["components/Section/Section.js","components/Notification/Notification.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/App.js","index.js"],"names":["Section","title","children","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","onLeaveFeedback","onClick","value","App","state","handleFeedback","feedbackButton","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","trunc","this","Component","ReactDOM","render","document","querySelector"],"mappings":"oPAGe,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,iCACE,4BAAKD,GACJC,GCLQ,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,2BAAIA,GCEE,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,6BACGD,EACC,4BACE,4BACE,oCAAUH,IAEZ,4BACE,uCAAaC,IAEf,4BACE,mCAASC,IAEX,4BACE,qCAAWC,IAEb,4BACE,iDAAuBC,EAAvB,OAIJ,kBAACP,EAAD,CAAcC,QAAQ,uBC9Bf,SAASO,EAAT,GAA+C,IAApBC,EAAmB,EAAnBA,gBACxC,OACE,6BACE,4BAAQC,QAASD,EAAiBE,MAAM,QAAxC,QAGA,4BAAQD,QAASD,EAAiBE,MAAM,WAAxC,WAGA,4BAAQD,QAASD,EAAiBE,MAAM,OAAxC,Q,ICNeC,E,4MACnBC,MAAQ,CACNV,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPS,eAAiB,YAAiB,IAC1BC,EADyB,EAAbC,OACYL,MAE9B,EAAKM,UAAS,SAAAC,GACZ,OAAO,eACJH,EAAiBG,EAAUH,GAAkB,O,EAKpDI,mBAAqB,WAAO,IAAD,EACM,EAAKN,MAEpC,OAHyB,EACjBV,KADiB,EACXC,QADW,EACFC,K,EAKzBe,gCAAkC,SAAAd,GAChC,OAAOe,KAAKC,MAAO,EAAKT,MAAMV,KAAOG,EAAS,M,uDAI9C,IAAMA,EAAQiB,KAAKJ,qBACnB,OACE,oCACE,kBAACtB,EAAD,CAASC,MAAM,wBACb,kBAACU,EAAD,CAAiBC,gBAAiBc,KAAKT,kBAEzC,kBAACjB,EAAD,CAASC,MAAM,cACb,kBAACI,EAAD,iBACMqB,KAAKV,MADX,CAEEP,MAAOA,EACPC,mBAAoBgB,KAAKH,gCAAgCd,Y,GAtCpCkB,a,MCAjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W","file":"static/js/main.c3c1370e.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.objectOf(PropTypes.func.isRequired),\r\n};\r\n","import React from 'react';\r\n\r\nexport default function Notification({ message }) {\r\n  return <p>{message}</p>;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Notification from '../Notification/Notification';\r\n\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <div>\r\n      {total ? (\r\n        <ul>\r\n          <li>\r\n            <p>Good: {good}</p>\r\n          </li>\r\n          <li>\r\n            <p>Neutral: {neutral}</p>\r\n          </li>\r\n          <li>\r\n            <p>Bad: {bad}</p>\r\n          </li>\r\n          <li>\r\n            <p>Total: {total}</p>\r\n          </li>\r\n          <li>\r\n            <p>Positive feedback: {positivePercentage}%</p>\r\n          </li>\r\n        </ul>\r\n      ) : (\r\n        <Notification message=\"No feedback given\" />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function FeedbackOptions({ onLeaveFeedback }) {\r\n  return (\r\n    <div>\r\n      <button onClick={onLeaveFeedback} value=\"good\">\r\n        Good\r\n      </button>\r\n      <button onClick={onLeaveFeedback} value=\"neutral\">\r\n        Neutral\r\n      </button>\r\n      <button onClick={onLeaveFeedback} value=\"bad\">\r\n        Bad\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\n\nimport Section from './Section/Section';\nimport Statistics from './Statistics/Statistics';\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleFeedback = ({ target }) => {\n    const feedbackButton = target.value;\n\n    this.setState(prevState => {\n      return {\n        [feedbackButton]: prevState[feedbackButton] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = total => {\n    return Math.trunc((this.state.good / total) * 100);\n  };\n\n  render() {\n    const total = this.countTotalFeedback();\n    return (\n      <>\n        <Section title=\"Plese leave feedback\">\n          <FeedbackOptions onLeaveFeedback={this.handleFeedback} />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            {...this.state}\n            total={total}\n            positivePercentage={this.countPositiveFeedbackPercentage(total)}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport './base.css';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}